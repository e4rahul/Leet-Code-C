/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode *l3 = NULL;
    struct ListNode *head = NULL; 
    struct ListNode *tmp = NULL;
    int rem = 0;
    int sum = 0;
    head = (struct ListNode *) malloc(sizeof(struct ListNode));
    memset(head, 0, sizeof(struct ListNode));
    l3 = head;
    while (l1 || l2) {
        sum = 0;
        if (l1 && l2) {
            sum = rem + l1->val + l2->val;          
        } else if (l1) {
            sum = rem + l1->val;
        } else if (l2) {
            sum = rem + l2->val;
        }
        if (sum >= 10) {
            sum = (sum) % 10;
            rem = 1;
        } else {
            rem = 0;
        }
        l3->val = sum;
        if (l1)  l1 = l1->next;
        if (l2) l2 = l2->next;
        if (l1 || l2 || rem) {
            tmp = (struct ListNode *) malloc(sizeof(struct ListNode));
            memset(tmp, 0, sizeof(struct ListNode));
            l3->next = tmp;
            l3 = l3->next;
            if (!l1 && !l2){
              l3->val = rem;
              break;
            }
            sum = 0;
        }
   }
    return head;
}
